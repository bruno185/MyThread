unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls;

type
  TForm1 = class(TForm)
    Button1: TButton;
    Memo1: TMemo;
    Button2: TButton;

    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);

  private
    { Déclarations privées }
  public
    { Déclarations publiques }
  end;

  MyThread = class(TThread)
  private
    { Déclarations privées }
    i : integer;
  protected
    procedure Execute; override;
    procedure UpdateCaption;
  public
   //constructor Create(CreateSuspended: Boolean) ;
  end;

var
  Form1: TForm1;
  myt : MyThread;

implementation

{$R *.dfm}

{constructor MyThread.Create(CreateSuspended: Boolean) ;
begin
  i := 0;
end;   }

procedure TForm1.Button1Click(Sender: TObject);

begin
  myt := MyThread.Create(false);
  Button1.Enabled := false;
  Button2.Enabled := true;
end;


procedure TForm1.Button2Click(Sender: TObject);
begin
  myt.Terminate;
  TerminateThread(myt.Handle,0);
  Button1.Enabled := true;
  Button2.Enabled := false;
end;

procedure MyThread.UpdateCaption;
begin
  Form1.Caption := 'toto';
end;

procedure MyThread.Execute;
begin
  while (i < maxint) or (Terminated) do
  begin
    inc(i);
    if (i mod 100000000 =0)  then
    begin
      Form1.Memo1.Lines.Add(IntToStr(i));
      Application.ProcessMessages;
    end;
  end;
end;


end.
